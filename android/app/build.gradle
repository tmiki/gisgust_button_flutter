def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter.gisgustbuttonflutter"
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug

            // You need to get your own Google Map API Key and put it into your "secret.properties" file.
            //
            // 1. Get your own API key by following the official document below.
            //    https://developers.google.com/maps/documentation/android-sdk/get-api-key
            // 2. Put your API key into the "secret.properties" file.
            //    secret.properties:
            //      GOOGLE_MAPS_API_KEY_DEBUG=YOUR-API-KEY
            def secretProps = new Properties()
            secretProps.load(new FileInputStream(file('secret.properties')))
            manifestPlaceholders = [GOOGLE_MAPS_API_KEY: secretProps['GOOGLE_MAPS_API_KEY_DEBUG']]
        }

        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            // You need to get your own Google Map API Key and put it into your "secret.properties" file.
            //
            // 1. Get your own API key by following the official document below.
            //    https://developers.google.com/maps/documentation/android-sdk/get-api-key
            // 2. Put your API key into the "secret.properties" file.
            //    secret.properties:
            //      GOOGLE_MAPS_API_KEY_RELEASE=YOUR-API-KEY
            def secretProps = new Properties()
            secretProps.load(new FileInputStream(file('secret.properties')))
            manifestPlaceholders = [GOOGLE_MAPS_API_KEY: secretProps['GOOGLE_MAPS_API_KEY_RELEASE']]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
